-- MySQL Script generated by MySQL Workbench
-- Friday 27 October 2017 12:10:59 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `imdb` ;

-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `imdb` DEFAULT CHARACTER SET utf8 ;
USE `imdb` ;

-- -----------------------------------------------------
-- Table `imdb`.`actor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`actor` ;

CREATE TABLE IF NOT EXISTS `imdb`.`actor` (
  `id_actor` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NULL,
  `gender` VARCHAR(45) NOT NULL,
  `age` VARCHAR(45) NULL,
  PRIMARY KEY (`id_actor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`language` ;

CREATE TABLE IF NOT EXISTS `imdb`.`language` (
  `id_language` INT NOT NULL,
  `language_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_language`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`genre` ;

CREATE TABLE IF NOT EXISTS `imdb`.`genre` (
  `id_genre` INT NOT NULL,
  `genrecol` VARCHAR(45) NULL,
  PRIMARY KEY (`id_genre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`rating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`rating` ;

CREATE TABLE IF NOT EXISTS `imdb`.`rating` (
  `id_rating` INT NOT NULL,
  `ratingcol` VARCHAR(45) NULL,
  PRIMARY KEY (`id_rating`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`movie` ;

CREATE TABLE IF NOT EXISTS `imdb`.`movie` (
  `id_movie` INT NOT NULL,
  `movie_name` VARCHAR(45) NOT NULL,
  `year_release` VARCHAR(45) NULL,
  `duration` VARCHAR(45) NULL,
  `language_id_language` INT NOT NULL,
  `genre_id_genre` INT NOT NULL,
  `rating_id_rating` INT NOT NULL,
  PRIMARY KEY (`id_movie`),
  INDEX `fk_movie_language1_idx` (`language_id_language` ASC),
  INDEX `fk_movie_genre1_idx` (`genre_id_genre` ASC),
  INDEX `fk_movie_rating1_idx` (`rating_id_rating` ASC),
  CONSTRAINT `fk_movie_language1`
    FOREIGN KEY (`language_id_language`)
    REFERENCES `imdb`.`language` (`id_language`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_genre1`
    FOREIGN KEY (`genre_id_genre`)
    REFERENCES `imdb`.`genre` (`id_genre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_rating1`
    FOREIGN KEY (`rating_id_rating`)
    REFERENCES `imdb`.`rating` (`id_rating`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`tv_series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`tv_series` ;

CREATE TABLE IF NOT EXISTS `imdb`.`tv_series` (
  `id_tv_series` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `duration` VARCHAR(45) NULL,
  `release_year` VARCHAR(45) NULL,
  `language_id_language` INT NOT NULL,
  `genre_id_genre` INT NOT NULL,
  `rating_id_rating` INT NOT NULL,
  PRIMARY KEY (`id_tv_series`),
  INDEX `fk_tv_series_language1_idx` (`language_id_language` ASC),
  INDEX `fk_tv_series_genre1_idx` (`genre_id_genre` ASC),
  INDEX `fk_tv_series_rating1_idx` (`rating_id_rating` ASC),
  CONSTRAINT `fk_tv_series_language1`
    FOREIGN KEY (`language_id_language`)
    REFERENCES `imdb`.`language` (`id_language`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tv_series_genre1`
    FOREIGN KEY (`genre_id_genre`)
    REFERENCES `imdb`.`genre` (`id_genre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tv_series_rating1`
    FOREIGN KEY (`rating_id_rating`)
    REFERENCES `imdb`.`rating` (`id_rating`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`actor_has_movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`actor_has_movie` ;

CREATE TABLE IF NOT EXISTS `imdb`.`actor_has_movie` (
  `actor_id_actor` INT NOT NULL,
  `movie_id_movie` INT NOT NULL,
  PRIMARY KEY (`actor_id_actor`, `movie_id_movie`),
  INDEX `fk_actor_has_movie_movie1_idx` (`movie_id_movie` ASC),
  INDEX `fk_actor_has_movie_actor_idx` (`actor_id_actor` ASC),
  CONSTRAINT `fk_actor_has_movie_actor`
    FOREIGN KEY (`actor_id_actor`)
    REFERENCES `imdb`.`actor` (`id_actor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_actor_has_movie_movie1`
    FOREIGN KEY (`movie_id_movie`)
    REFERENCES `imdb`.`movie` (`id_movie`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`actor_has_tv_series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`actor_has_tv_series` ;

CREATE TABLE IF NOT EXISTS `imdb`.`actor_has_tv_series` (
  `actor_id_actor` INT NOT NULL,
  `tv_series_id_tv_series` INT NOT NULL,
  PRIMARY KEY (`actor_id_actor`, `tv_series_id_tv_series`),
  INDEX `fk_actor_has_tv_series_tv_series1_idx` (`tv_series_id_tv_series` ASC),
  INDEX `fk_actor_has_tv_series_actor1_idx` (`actor_id_actor` ASC),
  CONSTRAINT `fk_actor_has_tv_series_actor1`
    FOREIGN KEY (`actor_id_actor`)
    REFERENCES `imdb`.`actor` (`id_actor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_actor_has_tv_series_tv_series1`
    FOREIGN KEY (`tv_series_id_tv_series`)
    REFERENCES `imdb`.`tv_series` (`id_tv_series`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

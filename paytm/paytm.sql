-- MySQL Script generated by MySQL Workbench
-- Friday 27 October 2017 03:23:03 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema paytm
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `paytm` ;

-- -----------------------------------------------------
-- Schema paytm
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `paytm` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `paytm` ;

-- -----------------------------------------------------
-- Table `paytm`.`branch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `paytm`.`branch` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `paytm`.`branch` (
  `id_branch` INT NOT NULL,
  `branch_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_branch`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `paytm`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `paytm`.`customer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `paytm`.`customer` (
  `id_customer` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `money` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_customer`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `paytm`.`account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `paytm`.`account` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `paytm`.`account` (
  `id_account` INT NOT NULL,
  `account_name` VARCHAR(45) NULL,
  `accountcol` VARCHAR(45) NULL,
  PRIMARY KEY (`id_account`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `paytm`.`opened_accounts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `paytm`.`opened_accounts` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `paytm`.`opened_accounts` (
  `id_opened_accounts` INT NOT NULL,
  `branch_id_branch` INT NOT NULL,
  `account_id_account` INT NOT NULL,
  `customer_id_customer` INT NOT NULL,
  PRIMARY KEY (`id_opened_accounts`, `branch_id_branch`, `account_id_account`, `customer_id_customer`),
  INDEX `fk_opened_accounts_branch_idx` (`branch_id_branch` ASC),
  INDEX `fk_opened_accounts_account1_idx` (`account_id_account` ASC),
  INDEX `fk_opened_accounts_customer1_idx` (`customer_id_customer` ASC),
  CONSTRAINT `fk_opened_accounts_branch`
    FOREIGN KEY (`branch_id_branch`)
    REFERENCES `paytm`.`branch` (`id_branch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_opened_accounts_account1`
    FOREIGN KEY (`account_id_account`)
    REFERENCES `paytm`.`account` (`id_account`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_opened_accounts_customer1`
    FOREIGN KEY (`customer_id_customer`)
    REFERENCES `paytm`.`customer` (`id_customer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
USE `paytm`;

DELIMITER $$

USE `paytm`$$
DROP TRIGGER IF EXISTS `paytm`.`opened_accounts_BEFORE_INSERT` $$
SHOW WARNINGS$$
USE `paytm`$$
CREATE DEFINER = CURRENT_USER TRIGGER `paytm`.`opened_accounts_BEFORE_INSERT` BEFORE INSERT ON `opened_accounts` FOR EACH ROW
CREATE DEFINER = CURRENT_USER TRIGGER `paytm`.`opened_accounts_BEFORE_INSERT` BEFORE INSERT ON `opened_accounts` FOR EACH ROW
BEGIN


IF ((SELECT count(opened_accounts.id_opened_accounts) from opened_accounts WHERE opened_accounts.customer_id_customer = NEW.customer_id_customer AND opened_accounts.branch_id_branch = NEW.branch_id_branch)>0)
THEN
SIGNAL SQLSTATE '01000'
SET MESSAGE_TEXT = 'No same customer in same branch', MYSQL_ERRNO = 1000;
END IF;
END;$$

SHOW WARNINGS$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

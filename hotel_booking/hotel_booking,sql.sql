-- MySQL Script generated by MySQL Workbench
-- Friday 27 October 2017 02:21:05 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema hotel_booking
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `hotel_booking` ;

-- -----------------------------------------------------
-- Schema hotel_booking
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hotel_booking` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `hotel_booking` ;

-- -----------------------------------------------------
-- Table `hotel_booking`.`hotel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_booking`.`hotel` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `hotel_booking`.`hotel` (
  `id_hotel` INT NOT NULL,
  `hotel_name` VARCHAR(45) NOT NULL,
  `phone_number` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NULL,
  `city` VARCHAR(45) NOT NULL,
  `price_per_room` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_hotel`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `hotel_booking`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_booking`.`customer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `hotel_booking`.`customer` (
  `id_customer` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `age` VARCHAR(45) NULL,
  `phone_number` VARCHAR(45) NOT NULL,
  `first_time` TINYTEXT NOT NULL DEFAULT '1',
  PRIMARY KEY (`id_customer`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `hotel_booking`.`hotel_customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_booking`.`hotel_customer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `hotel_booking`.`hotel_customer` (
  `id_booking` INT NOT NULL,
  `id_hotel` INT NOT NULL,
  `id_customer` INT NOT NULL,
  `start_time` VARCHAR(45) NOT NULL,
  `end_time` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_booking`),
  CONSTRAINT `fk_hotel_customer_1`
    FOREIGN KEY (`id_customer`)
    REFERENCES `hotel_booking`.`customer` (`id_customer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hotel_customer_2`
    FOREIGN KEY (`id_hotel`)
    REFERENCES `hotel_booking`.`hotel` (`id_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_hotel_customer_1_idx` ON `hotel_booking`.`hotel_customer` (`id_customer` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_hotel_customer_2_idx` ON `hotel_booking`.`hotel_customer` (`id_hotel` ASC);

SHOW WARNINGS;
USE `hotel_booking`;

DELIMITER $$

USE `hotel_booking`$$
DROP TRIGGER IF EXISTS `hotel_booking`.`hotel_customer_BEFORE_INSERT` $$
SHOW WARNINGS$$
USE `hotel_booking`$$
CREATE DEFINER = CURRENT_USER TRIGGER `hotel_booking`.`hotel_customer_BEFORE_INSERT` BEFORE INSERT ON `hotel_customer` FOR EACH ROW
BEGIN
 IF ((SELECT count(hotel_customer.id_customer) FROM hotel_customer WHERE hotel_customer.id_customer =NEW.id_customer) >0)THEN
   UPDATE customer SET customer.first_time = 0 WHERE hotel_customer.id_customer = NEW.id_customer;
 END IF;
END$$

SHOW WARNINGS$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
